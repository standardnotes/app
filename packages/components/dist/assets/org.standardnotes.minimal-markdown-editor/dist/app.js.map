{"version":3,"file":"app.js","names":["document","addEventListener","event","componentRelay","workingNote","clientData","lastValue","lastUUID","editor","ignoreTextChange","initialLoad","loadComponentRelay","initialPermissions","name","ComponentRelay","targetWindow","window","onReady","platform","body","classList","add","loadEditor","setOption","isMobile","streamContextItem","note","onReceivedNote","saveNote","saveItemWithPresave","getValue","content","text","preview_plain","preview_html","uuid","isMetadataUpdate","getDoc","setValue","clearHistory","spellcheck","CodeMirror","fromTextArea","getElementById","mode","lineWrapping","extraKeys","inputStyle","getInputStyleForEnvironment","setSize","undefined","on","environment"],"sources":["app.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function (event) {\n  let componentRelay\n  let workingNote, clientData\n  let lastValue, lastUUID\n  let editor\n  let ignoreTextChange = false\n  let initialLoad = true\n\n  function loadComponentRelay() {\n    const initialPermissions = [{ name: 'stream-context-item' }]\n    componentRelay = new ComponentRelay({\n      initialPermissions,\n      targetWindow: window,\n      onReady: function () {\n        const platform = componentRelay.platform\n        if (platform) {\n          document.body.classList.add(platform)\n        }\n\n        loadEditor()\n\n        // only use CodeMirror selection color if we're not on mobile.\n        editor.setOption('styleSelectedText', !componentRelay.isMobile)\n      },\n    })\n\n    componentRelay.streamContextItem((note) => {\n      onReceivedNote(note)\n    })\n  }\n\n  function saveNote() {\n    if (workingNote) {\n      // Be sure to capture this object as a variable, as this.note may be reassigned in `streamContextItem`, so by the time\n      // you modify it in the presave block, it may not be the same object anymore, so the presave values will not be applied to\n      // the right object, and it will save incorrectly.\n      let note = workingNote\n\n      componentRelay.saveItemWithPresave(note, () => {\n        lastValue = editor.getValue()\n        note.content.text = lastValue\n        note.clientData = clientData\n\n        // clear previews\n        note.content.preview_plain = null\n        note.content.preview_html = null\n      })\n    }\n  }\n\n  function onReceivedNote(note) {\n    if (note.uuid !== lastUUID) {\n      // Note changed, reset last values\n      lastValue = null\n      initialLoad = true\n      lastUUID = note.uuid\n    }\n\n    workingNote = note\n\n    // Only update UI on non-metadata updates.\n    if (note.isMetadataUpdate) {\n      return\n    }\n\n    clientData = note.clientData\n\n    if (editor) {\n      if (note.content.text !== lastValue) {\n        ignoreTextChange = true\n        editor.getDoc().setValue(workingNote.content.text)\n        ignoreTextChange = false\n      }\n\n      if (initialLoad) {\n        initialLoad = false\n        editor.getDoc().clearHistory()\n      }\n\n      editor.setOption('spellcheck', workingNote.content.spellcheck)\n    }\n  }\n\n  function loadEditor() {\n    editor = CodeMirror.fromTextArea(document.getElementById('code'), {\n      mode: 'gfm',\n      lineWrapping: true,\n      extraKeys: { 'Alt-F': 'findPersistent' },\n      inputStyle: getInputStyleForEnvironment(),\n    })\n    editor.setSize(undefined, '100%')\n\n    editor.on('change', function () {\n      if (ignoreTextChange) {\n        return\n      }\n      saveNote()\n    })\n  }\n\n  function getInputStyleForEnvironment() {\n    const environment = componentRelay.environment ?? 'web'\n    return environment === 'mobile' ? 'textarea' : 'contenteditable'\n  }\n\n  loadComponentRelay()\n})\n"],"mappings":"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"}