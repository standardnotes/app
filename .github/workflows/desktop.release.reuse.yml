name: Desktop Reusable Release Workflow

on:
  workflow_call:
    inputs:
      channel:
        required: true
        type: string

jobs:
  Mac:
    runs-on: macos-latest
    env:
      CSC_LINK: ${{ secrets.MAC_CI_KEYS }}
      CSC_KEY_PASSWORD: ${{ secrets.MAC_CI_KEYS_PASSWORD }}
      NOTARIZE_APPLE_ID: ${{ secrets.NOTARIZE_APPLE_ID }}
      NOTARIZE_APPLE_ID_PASSWORD: ${{ secrets.NOTARIZE_APPLE_ID_PASSWORD }}
    defaults:
      run:
        working-directory: packages/desktop
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn install --immutable
      - run: yarn build:desktop
      - run: echo APP_VERSION=$(node -p "require('./../web/package.json').version") >> $GITHUB_ENV

      - name: Compile Mac
        run: yarn run webpack --config desktop.webpack.prod.js
      - name: MacX64
        run: |
          yarn run electron-builder --mac --x64 --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}
          node scripts/fixMacZip.js ${{ env.APP_VERSION }}
      - name: MacArm64
        run: yarn run electron-builder --mac --arm64 --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}

      - name: Upload
        uses: actions/upload-artifact@v3.0.0
        with:
          name: assets
          path: |
            packages/desktop/dist/*.dmg
            packages/desktop/dist/*.zip
            packages/desktop/dist/*.blockmap
            packages/desktop/dist/*.yml
            packages/desktop/dist/*.yaml

  Linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/desktop
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
      - name: Install FPM
        run: sudo gem install fpm -f

      - run: yarn install --immutable
      - run: yarn build:desktop

      - run: echo APP_VERSION=$(node -p "require('./../web/package.json').version") >> $GITHUB_ENV

      - name: Compile for AppImage
        run: yarn run webpack --config desktop.webpack.prod.js
      - name: AppImage
        run: yarn run electron-builder --linux --x64 -c.linux.target=AppImage --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}
      - name: AppImageX64
        run: yarn run electron-builder --linux --x64 -c.linux.target=AppImage --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}
      - name: AppImageArm64
        run: yarn run electron-builder --linux --arm64 -c.linux.target=AppImage --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}

      - name: Deb
        run: |
          yarn run webpack --config desktop.webpack.prod.js --env deb
          yarn run electron-builder --linux --x64 -c.linux.target=deb --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}
      - name: DebArm64
        env:
          npm_config_target_arch: 'arm64'
          USE_SYSTEM_FPM: 'true'
        run: |
          yarn run webpack --config desktop.webpack.prod.js --env deb
          yarn run electron-builder --linux --arm64 -c.linux.target=deb --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}

      - name: Dir
        run: |
          yarn run webpack --config desktop.webpack.prod.js
          yarn run electron-builder --linux --x64 -c.linux.target=dir --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}
      - name: DirArm64
        run: |
          yarn run webpack --config desktop.webpack.prod.js
          yarn run electron-builder --linux --arm64 -c.linux.target=dir --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}
        env:
          npm_config_target_arch: 'arm64'

      - name: Snap
        run: |
          sudo snap install snapcraft --classic
          yarn run webpack --config desktop.webpack.prod.js --env snap
          yarn run electron-builder --linux --x64 -c.linux.target=snap --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}

      - name: Upload
        uses: actions/upload-artifact@v3.0.0
        with:
          name: assets
          path: |
            packages/desktop/dist/*.snap
            packages/desktop/dist/*.AppImage
            packages/desktop/dist/*.deb
            packages/desktop/dist/*.blockmap
            packages/desktop/dist/*.yml
            packages/desktop/dist/*.yaml

  Windows:
    runs-on: self-hosted
    env:
      WINDOWS_TOKEN_ALIAS: ${{ secrets.WINDOWS_TOKEN_ALIAS }}
      WINDOWS_TOKEN_PASSWORD: ${{ secrets.WINDOWS_TOKEN_PASSWORD }}
    defaults:
      run:
        working-directory: packages/desktop
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn install --immutable
      - run: yarn build:desktop
      - run: yarn run webpack --config desktop.webpack.prod.js
      - run: echo APP_VERSION=$(node -p "require('./../web/package.json').version") >> $GITHUB_ENV
      - run: yarn run electron-builder --windows --x64 --ia32 --publish=never --c.extraMetadata.version=${{ env.APP_VERSION }}

      - name: Upload
        uses: actions/upload-artifact@v3.0.0
        with:
          name: assets
          path: |
            packages/desktop/dist/*.blockmap
            packages/desktop/dist/*.exe
            packages/desktop/dist/*.yml
            packages/desktop/dist/*.yaml

  Publish:
    runs-on: ubuntu-latest
    env:
      SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
    if: ${{ always() }}
    needs: [Windows, Mac, Linux]
    defaults:
      run:
        working-directory: packages/desktop
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          registry-url: 'https://registry.npmjs.org'
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - run: echo APP_VERSION=$(node -p "require('./../web/package.json').version") >> $GITHUB_ENV

      - run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: assets
          path: packages/desktop/dist

      - name: Generate Checksums
        run: node scripts/sums.mjs

      - name: Generate Release Notes
        uses: ./actions/release-notes
        with:
          package: web desktop
        id: release-notes
        continue-on-error: true

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.CI_PAT_TOKEN }}
          tag_name: "@standardnotes/desktop@${{ env.APP_VERSION }}"
          name: "Desktop ${{ env.APP_VERSION }}"
          body: ${{ steps.release-notes.outputs.result }}
          prerelease: true
          draft: false
          files: packages/desktop/dist/*

      - name: Notify Release Update
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.CI_PAT_TOKEN }}
          repository: ${{ secrets.RELEASES_EVENT_RECEIVING_REPO }}
          event-type: releases-updated-event

      - name: Publish Snap
        continue-on-error: true
        run: |
          sudo snap install snapcraft --classic
          snapcraft upload dist/standard-notes-${{ env.APP_VERSION }}-linux-amd64.snap --release stable,candidate,beta,edge
